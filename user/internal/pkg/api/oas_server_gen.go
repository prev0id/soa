// Code generated by ogen, DO NOT EDIT.

package api_desc

import (
	"context"
)

// Handler handles operations described by OpenAPI v3 specification.
type Handler interface {
	// GetUserProfile implements getUserProfile operation.
	//
	// Получение данных профиля.
	//
	// GET /profile
	GetUserProfile(ctx context.Context) (GetUserProfileRes, error)
	// LoginUser implements loginUser operation.
	//
	// Аутентификация пользователя.
	//
	// POST /login
	LoginUser(ctx context.Context, req *LoginUserReq) (LoginUserRes, error)
	// RegisterUser implements registerUser operation.
	//
	// Регистрация нового пользователя.
	//
	// POST /register
	RegisterUser(ctx context.Context, req *RegisterUserReq) (RegisterUserRes, error)
	// UpdateUserProfile implements updateUserProfile operation.
	//
	// Обновление профиля пользователя.
	//
	// PUT /profile
	UpdateUserProfile(ctx context.Context, req *UpdateUserProfileReq) (UpdateUserProfileRes, error)
}

// Server implements http server based on OpenAPI v3 specification and
// calls Handler to handle requests.
type Server struct {
	h   Handler
	sec SecurityHandler
	baseServer
}

// NewServer creates new Server.
func NewServer(h Handler, sec SecurityHandler, opts ...ServerOption) (*Server, error) {
	s, err := newServerConfig(opts...).baseServer()
	if err != nil {
		return nil, err
	}
	return &Server{
		h:          h,
		sec:        sec,
		baseServer: s,
	}, nil
}
