// Code generated by ogen, DO NOT EDIT.

package api_desc

import (
	"time"
)

// ClickPromoBadRequest is response for ClickPromo operation.
type ClickPromoBadRequest struct{}

func (*ClickPromoBadRequest) clickPromoRes() {}

// ClickPromoInternalServerError is response for ClickPromo operation.
type ClickPromoInternalServerError struct{}

func (*ClickPromoInternalServerError) clickPromoRes() {}

type ClickPromoOK struct {
	Success   OptBool     `json:"success"`
	ClickedAt OptDateTime `json:"clicked_at"`
}

// GetSuccess returns the value of Success.
func (s *ClickPromoOK) GetSuccess() OptBool {
	return s.Success
}

// GetClickedAt returns the value of ClickedAt.
func (s *ClickPromoOK) GetClickedAt() OptDateTime {
	return s.ClickedAt
}

// SetSuccess sets the value of Success.
func (s *ClickPromoOK) SetSuccess(val OptBool) {
	s.Success = val
}

// SetClickedAt sets the value of ClickedAt.
func (s *ClickPromoOK) SetClickedAt(val OptDateTime) {
	s.ClickedAt = val
}

func (*ClickPromoOK) clickPromoRes() {}

type ClickPromoReq struct {
	ClientID string `json:"client_id"`
	EntityID string `json:"entity_id"`
}

// GetClientID returns the value of ClientID.
func (s *ClickPromoReq) GetClientID() string {
	return s.ClientID
}

// GetEntityID returns the value of EntityID.
func (s *ClickPromoReq) GetEntityID() string {
	return s.EntityID
}

// SetClientID sets the value of ClientID.
func (s *ClickPromoReq) SetClientID(val string) {
	s.ClientID = val
}

// SetEntityID sets the value of EntityID.
func (s *ClickPromoReq) SetEntityID(val string) {
	s.EntityID = val
}

// CommentPromoBadRequest is response for CommentPromo operation.
type CommentPromoBadRequest struct{}

func (*CommentPromoBadRequest) commentPromoRes() {}

// CommentPromoInternalServerError is response for CommentPromo operation.
type CommentPromoInternalServerError struct{}

func (*CommentPromoInternalServerError) commentPromoRes() {}

type CommentPromoOK struct {
	CommentID   OptString   `json:"comment_id"`
	CommentedAt OptDateTime `json:"commented_at"`
}

// GetCommentID returns the value of CommentID.
func (s *CommentPromoOK) GetCommentID() OptString {
	return s.CommentID
}

// GetCommentedAt returns the value of CommentedAt.
func (s *CommentPromoOK) GetCommentedAt() OptDateTime {
	return s.CommentedAt
}

// SetCommentID sets the value of CommentID.
func (s *CommentPromoOK) SetCommentID(val OptString) {
	s.CommentID = val
}

// SetCommentedAt sets the value of CommentedAt.
func (s *CommentPromoOK) SetCommentedAt(val OptDateTime) {
	s.CommentedAt = val
}

func (*CommentPromoOK) commentPromoRes() {}

type CommentPromoReq struct {
	ClientID string `json:"client_id"`
	EntityID string `json:"entity_id"`
	Message  string `json:"message"`
}

// GetClientID returns the value of ClientID.
func (s *CommentPromoReq) GetClientID() string {
	return s.ClientID
}

// GetEntityID returns the value of EntityID.
func (s *CommentPromoReq) GetEntityID() string {
	return s.EntityID
}

// GetMessage returns the value of Message.
func (s *CommentPromoReq) GetMessage() string {
	return s.Message
}

// SetClientID sets the value of ClientID.
func (s *CommentPromoReq) SetClientID(val string) {
	s.ClientID = val
}

// SetEntityID sets the value of EntityID.
func (s *CommentPromoReq) SetEntityID(val string) {
	s.EntityID = val
}

// SetMessage sets the value of Message.
func (s *CommentPromoReq) SetMessage(val string) {
	s.Message = val
}

// ListCommentsBadRequest is response for ListComments operation.
type ListCommentsBadRequest struct{}

func (*ListCommentsBadRequest) listCommentsRes() {}

// ListCommentsInternalServerError is response for ListComments operation.
type ListCommentsInternalServerError struct{}

func (*ListCommentsInternalServerError) listCommentsRes() {}

type ListCommentsOK struct {
	Comments      []ListCommentsOKCommentsItem `json:"comments"`
	NextPageToken OptString                    `json:"next_page_token"`
}

// GetComments returns the value of Comments.
func (s *ListCommentsOK) GetComments() []ListCommentsOKCommentsItem {
	return s.Comments
}

// GetNextPageToken returns the value of NextPageToken.
func (s *ListCommentsOK) GetNextPageToken() OptString {
	return s.NextPageToken
}

// SetComments sets the value of Comments.
func (s *ListCommentsOK) SetComments(val []ListCommentsOKCommentsItem) {
	s.Comments = val
}

// SetNextPageToken sets the value of NextPageToken.
func (s *ListCommentsOK) SetNextPageToken(val OptString) {
	s.NextPageToken = val
}

func (*ListCommentsOK) listCommentsRes() {}

type ListCommentsOKCommentsItem struct {
	CommentID   OptString   `json:"comment_id"`
	ClientID    OptString   `json:"client_id"`
	Message     OptString   `json:"message"`
	CommentedAt OptDateTime `json:"commented_at"`
}

// GetCommentID returns the value of CommentID.
func (s *ListCommentsOKCommentsItem) GetCommentID() OptString {
	return s.CommentID
}

// GetClientID returns the value of ClientID.
func (s *ListCommentsOKCommentsItem) GetClientID() OptString {
	return s.ClientID
}

// GetMessage returns the value of Message.
func (s *ListCommentsOKCommentsItem) GetMessage() OptString {
	return s.Message
}

// GetCommentedAt returns the value of CommentedAt.
func (s *ListCommentsOKCommentsItem) GetCommentedAt() OptDateTime {
	return s.CommentedAt
}

// SetCommentID sets the value of CommentID.
func (s *ListCommentsOKCommentsItem) SetCommentID(val OptString) {
	s.CommentID = val
}

// SetClientID sets the value of ClientID.
func (s *ListCommentsOKCommentsItem) SetClientID(val OptString) {
	s.ClientID = val
}

// SetMessage sets the value of Message.
func (s *ListCommentsOKCommentsItem) SetMessage(val OptString) {
	s.Message = val
}

// SetCommentedAt sets the value of CommentedAt.
func (s *ListCommentsOKCommentsItem) SetCommentedAt(val OptDateTime) {
	s.CommentedAt = val
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// RegisterClientBadRequest is response for RegisterClient operation.
type RegisterClientBadRequest struct{}

func (*RegisterClientBadRequest) registerClientRes() {}

// RegisterClientInternalServerError is response for RegisterClient operation.
type RegisterClientInternalServerError struct{}

func (*RegisterClientInternalServerError) registerClientRes() {}

type RegisterClientOK struct {
	Success      OptBool     `json:"success"`
	RegisteredAt OptDateTime `json:"registered_at"`
}

// GetSuccess returns the value of Success.
func (s *RegisterClientOK) GetSuccess() OptBool {
	return s.Success
}

// GetRegisteredAt returns the value of RegisteredAt.
func (s *RegisterClientOK) GetRegisteredAt() OptDateTime {
	return s.RegisteredAt
}

// SetSuccess sets the value of Success.
func (s *RegisterClientOK) SetSuccess(val OptBool) {
	s.Success = val
}

// SetRegisteredAt sets the value of RegisteredAt.
func (s *RegisterClientOK) SetRegisteredAt(val OptDateTime) {
	s.RegisteredAt = val
}

func (*RegisterClientOK) registerClientRes() {}

type RegisterClientReq struct {
	ClientID string `json:"client_id"`
}

// GetClientID returns the value of ClientID.
func (s *RegisterClientReq) GetClientID() string {
	return s.ClientID
}

// SetClientID sets the value of ClientID.
func (s *RegisterClientReq) SetClientID(val string) {
	s.ClientID = val
}

// ViewPromoBadRequest is response for ViewPromo operation.
type ViewPromoBadRequest struct{}

func (*ViewPromoBadRequest) viewPromoRes() {}

// ViewPromoInternalServerError is response for ViewPromo operation.
type ViewPromoInternalServerError struct{}

func (*ViewPromoInternalServerError) viewPromoRes() {}

type ViewPromoOK struct {
	Success  OptBool     `json:"success"`
	ViewedAt OptDateTime `json:"viewed_at"`
}

// GetSuccess returns the value of Success.
func (s *ViewPromoOK) GetSuccess() OptBool {
	return s.Success
}

// GetViewedAt returns the value of ViewedAt.
func (s *ViewPromoOK) GetViewedAt() OptDateTime {
	return s.ViewedAt
}

// SetSuccess sets the value of Success.
func (s *ViewPromoOK) SetSuccess(val OptBool) {
	s.Success = val
}

// SetViewedAt sets the value of ViewedAt.
func (s *ViewPromoOK) SetViewedAt(val OptDateTime) {
	s.ViewedAt = val
}

func (*ViewPromoOK) viewPromoRes() {}

type ViewPromoReq struct {
	ClientID string `json:"client_id"`
	EntityID string `json:"entity_id"`
}

// GetClientID returns the value of ClientID.
func (s *ViewPromoReq) GetClientID() string {
	return s.ClientID
}

// GetEntityID returns the value of EntityID.
func (s *ViewPromoReq) GetEntityID() string {
	return s.EntityID
}

// SetClientID sets the value of ClientID.
func (s *ViewPromoReq) SetClientID(val string) {
	s.ClientID = val
}

// SetEntityID sets the value of EntityID.
func (s *ViewPromoReq) SetEntityID(val string) {
	s.EntityID = val
}
